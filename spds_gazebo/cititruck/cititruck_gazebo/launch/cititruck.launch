<?xml version="1.0"?>

<launch>
  <arg name="robot_pose_x" default="0"/>
  <arg name="robot_pose_y" default="0"/>
  <arg name="robot_pose_z" default="0"/>
  <arg name="robot_pose_roll" default="0"/>
  <arg name="robot_pose_pitch" default="0"/>
  <arg name="robot_pose_yaw" default="0"/>
  <arg name="robot_id" default="cititruck"/>
  <arg name="xacro_name" default="cititruck"/>

  <arg name="asus_camera" default="false" />
  <arg name="kinect1_name" default="asus_fork"/>
  <arg name="velodyne" default="false" />
  <arg name="kinect2" default="false" />
  <arg name="kinect2_name" default="kinect2"/>

  <!-- TMUX -->
	<arg name="tmux"			default="false"/>
	<arg name="launch-prefix"   if="$(eval bool(tmux))"     default="$(find spds_launch)/scripts/tmux_new_pane.sh -w robot" />
	<arg name="launch-prefix"   unless="$(eval bool(tmux))" default=""/>

  <param name="robot_description" command="$(find xacro)/xacro --inorder 
    '$(find cititruck_description)/urdf/$(arg xacro_name).xacro'
     velodyne:=$(arg velodyne) kinect2:=$(arg kinect2) kinect1:=$(arg asus_camera) kinect1_name:=$(arg kinect1_name) tf_prefix:=$(arg robot_id)/sensors  controller_prefix:=controller/  sensor_prefix:=sensors/  sick_name:=laser2d_floor ls2000_name:=laser2d_top kinect2_name:=$(arg kinect2_name)"/>

  <arg name="launch-suffix"   if="$(eval bool(tmux))"     default=" -p spawn_model"/>
	<arg name="launch-suffix"   unless="$(eval bool(tmux))" default=""/>
  
  <node name="spawn_cititruck_model"
        pkg="gazebo_ros" type="spawn_model" launch-prefix="$(arg launch-prefix)$(arg launch-suffix)"
        args="-unpause -urdf -param robot_description -model $(arg robot_id) -x $(arg robot_pose_x) -y $(arg robot_pose_y) -z $(arg robot_pose_z) -R $(arg robot_pose_roll) -P $(arg robot_pose_pitch) -Y $(arg robot_pose_yaw)"
        respawn="false" output="screen" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" launch-prefix="$(arg launch-prefix)$(arg launch-suffix)"/>

  <group if="$(arg kinect2)">
    This is needed, since the plugin for the kinect camera utilize both the namespace and the tf_prefix...
    <!-- TODO who needs this? -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="$(arg robot_id)_kinect2_link_broadcaster" args="0 0 0 0 1.57 0 $(arg robot_id)/kinect2_link $(arg robot_id)/kinect2_link_tmp 100" />
    <node pkg="tf" type="static_transform_publisher" name="$(arg robot_id)_kinect_link_tmp_broadcaster" args="0 0 0 -1.57 0 0 $(arg robot_id)/kinect2_link_tmp $(arg robot_id)/$(arg robot_id)/kinect2_link 100" /> -->
  </group>

  <include file="$(find spds_pallet_recognision)/launch/filter_chain.launch">
    <arg name="robot_id" value="$(arg robot_id)"/>
    <arg name="tmux" value="$(arg tmux)"/>
    <arg name="camera_name" value="$(arg kinect1_name)"/>
  </include>
  
  <!-- <node name="image_rotate"
        pkg="image_rotate"
        type="image_rotate"
        args="image:=$(arg kinect1_name)/depth/image_color rotated/image:=$(arg kinect1_name)/depth/image_color_rotated"
        output="screen" /> -->
</launch>
