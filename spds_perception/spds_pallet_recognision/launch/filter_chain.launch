<?xml version="1.0"?>
<launch>
  <arg name="robot_id" default="robotX" />
  <arg name="camera_name" default="asus_fork"/>
  <arg name="input_relative_topic"      default="depth_registered/points" />
	<arg name="voxel_grid_topic"		default="depth_registered/voxel_grid" />
	<arg name="pallet_box_output_topic"	default="depth_registered/points_filtered_box" />
	<arg name="passthrough_topic" 		default="depth_registered/passthrough"/>
	<arg name="input_pallet_recognision" default="$(arg input_relative_topic)"/>
    <!-- TMUX -->
	<arg name="tmux"			default="false"/>
	<arg name="launch-prefix"   if="$(eval bool(tmux))"     default="$(find spds_launch)/scripts/tmux_new_pane.sh -w pcl" />
	<arg name="launch-prefix"   unless="$(eval bool(tmux))" default=""/>
	<arg name="manager"                   default="pcl_manager"/>
	<arg name="external_manager"    	  default="false"/>
	<rosparam command="load" file="$(find spds_pallet_recognision)/params/default_filter_chain_params.yaml"  ns="sensors/$(arg camera_name)"/>

	<!-- Filters -->
	<arg name="launch-suffix"   if="$(eval bool(tmux))"     default=" -p filter_chain_nodelet"/>
	<arg name="launch-suffix"   unless="$(eval bool(tmux))" default=""/>
	<node unless="$(arg external_manager)" pkg="nodelet" type="nodelet" name="$(arg manager)"  ns="sensors/$(arg camera_name)"
	    launch-prefix="$(arg launch-prefix)$(arg launch-suffix)"  args="manager" output="screen" />
	
	<!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" ns="sensors/$(arg camera_name)"
		launch-prefix="$(arg launch-prefix)$(arg launch-suffix)" args="load pcl/VoxelGrid $(arg manager)" output="screen">
    <remap from="~input" to="$(arg input_relative_topic)" />
	<remap from="~output" to="$(arg voxel_grid_topic)" />
  </node>

	<!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough" ns="sensors/$(arg camera_name)"
		launch-prefix="$(arg launch-prefix)$(arg launch-suffix)" args="load pcl/PassThrough $(arg manager)" output="screen">
    <remap from="~input" to="$(arg pallet_box_output_topic)" />
	<remap from="~output" to="$(arg passthrough_topic)" />
  </node>

	<!-- Run CropBox filter -->
	<node pkg="nodelet" type="nodelet" name="filtered_box"  ns="sensors/$(arg camera_name)"
		launch-prefix="$(arg launch-prefix)$(arg launch-suffix)"  args="load pcl/CropBox $(arg manager)" output="screen">
		<remap from="~input" to="$(arg input_relative_topic)" />
		<remap from="~output" to="$(arg pallet_box_output_topic)" />
	</node>


	<arg name="launch-suffix-1"   if="$(eval bool(tmux))"     default=" -p pallet_recognision"/>
 	<arg name="launch-suffix-1"   unless="$(eval bool(tmux))" default=""/>
  <node pkg="spds_pallet_recognision" type="pallet_recognision" name="pallet_recognision"
		launch-prefix="$(arg launch-prefix)$(arg launch-suffix-1)" output="screen">
		<remap from="input" to="sensors/$(arg camera_name)/$(arg passthrough_topic)" />
		<remap from="output" to="pallet_position" />
  </node>

</launch>