robot1:
  params:
    controller: 
       {# Time limit for QP (millisecond)
        qp_time_limit: 0.010,
        # Limit on the number of active set updates
        qp_as_change_limit: 500,
        # If solution of the QP is failed, it is possible to reuse solution
        # from the previous iteration: the problem may become feasible again
        # later. This parameter limits the number of subsequent iterations,
        # when old solution can be reused.
        qp_max_solution_reuse: 0,
        ############
        # The following gains control usage of sensor data for estimation of
        # the current state. Their values must lie within [0, 1]. When a particular
        # gain is equal to 1, only sensor data is used. On the other hand, if this 
        # gain is equal to 0, the value of the respective variable is assumed to be
        # equal to the expected value and sensor readings are discarded.
        # The phi cannot be 0.0 here or the estimation and the real value will be a factor of 2. off. (found with the Indigo implementation).
        error_feedback_gains_x: 1.0,
        error_feedback_gains_y: 1.0,
        error_feedback_gains_theta: 1.0,
        error_feedback_gains_phi: 1.0,
        ############
        # Gains
        # There are two sets of gains corresponding to different modes of
        # trajectory tracking. The modes must be provided for each point of
        # a trajectory by other modules.
        ##
        # State gains #1
        state_gains_x_mode1: 100.0,
        state_gains_y_mode1: 100.0,
        state_gains_theta_mode1: 10.0,
        state_gains_phi_mode1: 0.1,
        # Control gains #1
        control_gains_v_mode1: 20.0,
        control_gains_w_mode1: 0.01,
        # State gains #2
        state_gains_x_mode2: 100.0,
        state_gains_y_mode2: 100.0,
        state_gains_theta_mode2: 10.0,
        state_gains_phi_mode2: 0.1,
        # Control gains #2
        control_gains_v_mode2: 20.0,
        control_gains_w_mode2: 0.01,
        ############
        # Maximal velocity of the reference point (m/s)
        max_tangential_velocity: 1.0,
        # Maximal acceleration of the reference point (m/s^2)
        max_tangential_acceleration: 1.0,
        # Maximal centripetal acceleration (m/s^2)
        max_centripetal_acceleration: 0.5,
        # Maximal steering angle (radian) ~60 degrees
        # !!! Must be < pi/2
        max_steer_angle: 1.5,
        # Maximal steering angular velocity (radian/second)
        max_steer_angular_velocity: 1.0,
        # Maximal orientation angle (theta)
        max_orientation_angle: 6.28,
        ############
        # Safety
        ##
        # Maximal velocity change of the steering wheel (m/s) in one sampling period
        max_steering_wheel_velocity_delta: 1.0,
        # Maximal steering angular velocity (radian) in one sampling period
        max_steer_angular_velocity_delta: 1.0,
        ############
        # Interpret the initial state as (x = 0.0, y = 0.0, theta = 0.0)
        enable_state_transformation: false,
        # When the goal is reached, attempt to stop gracefully by adding fake 
        # trailing reference points (avoid problems with badly generated trajectories).
        # 0 - disable the feature
        max_graceful_brake_steps: 10,
        # When QP is failed, attempt to stop gracefully by adding fake trailing 
        # reference points, which do not have position constraints (but have all
        # other constraints). 0 - disable the feature
        max_graceful_emergency_brake_steps: 5,
        ############
        # Distance between the axes of the front and rear wheels (meter)
        # obsolete, use physical/wheel_base
        #car_wheel_base: 1.190,
        ############
        # Disable/enable particular types of constraints
        # Be careful, not well tested.
        enable_position_constraints: false,
        enable_cen_acc_constraints: true,
        enable_tan_acc_constraints: true,
        enable_orientation_constraints: true
       }

  execution:
       {
        max_vel: 0.3,
        max_rotational_vel: 0.3,
        max_acc: 0.1
       }

  physical:
       {# Distance between the axes of the front and rear wheels (meter)
        wheel_base: 1.190,
        # Vehicle geometry model
        vehicle_model: 1,
        has_forks: 1
       }

  motion:
       {
        # Max utilized steering angle in the optimized paths
        phi_min: -1.0,
        phi_max: 1.0,
        # The discretization used in the generated path, this will greatly influence the computatinal speed, to large values will add insterpolations effects to the motion.
        min_incr_dist: 0.1
       }

  visualize:
      {
       # Utilize rviz to visualize paths in the motion generation (raw paths)
       raw_path: true,
       smoothed_path: true,
       smoothed_path_deep: false,
       constraints: true,
       constraints_outer: false,
       constraints_active: false
      }
